- name: Create ~/.ssh
  file:
    path: /root/.ssh
    state: directory
    mode: 0700

- name: Generate SSH id_rsa key
  command: /usr/bin/ssh-keygen -t rsa -b 4096 -N "" -f /root/.ssh/id_rsa
  args:
    creates: /root/.ssh/id_rsa

- name: Generate SSH id_ecdsa key
  command: /usr/bin/ssh-keygen -t ecdsa -b 521 -N "" -f /root/.ssh/id_ecdsa
  args:
    creates: /root/.ssh/id_ecdsa

- name: Generate SSH id_ed25519 key
  command: /usr/bin/ssh-keygen -t ed25519 -N "" -f /root/.ssh/id_ed25519
  args:
    creates: /root/.ssh/id_ed25519

- name: Create /root/.ssh/authorized_keys
  file:
    path: /root/.ssh/authorized_keys
    state: touch
    mode: 0600

# with_lines will cat keys on controller
# but shell: "/usr/bin/cat /root/.ssh/*.pub will" cat on remote node
#

- name: Add keys to /root/.ssh/authorized_keys
  lineinfile:
    dest: /root/.ssh/authorized_keys
    line: "{{ item }}"
  with_lines: /usr/bin/cat /root/.ssh/*.pub

- name: Register local *.pub keys
  shell: /usr/bin/cat /root/.ssh/*.pub
  register: local_ssh_keys
 
- name: Put local ssh keys to /root/.ssh/authorized_keys
  lineinfile: 
    dest: /root/.ssh/authorized_keys
    line: "{{ item }}"
  with_items: "{{ local_ssh_keys.stdout_lines }}"

- name: Configure /etc/ssh/ssh_config
  template:
    src: ssh_config.j2
    dest: /etc/ssh/ssh_config
    backup: yes

- name: Configure /etc/ssh/sshd_config
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    backup: yes

- name: Restart sshd
  service:
    name: sshd.service
    state: restarted
  when: ansible_connection != 'chroot'

